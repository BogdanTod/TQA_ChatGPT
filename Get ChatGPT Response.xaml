<Activity mc:Ignorable="sap sap2010" x:Class="GetChatGPTResponse" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_strInputPrompt" Type="InArgument(x:String)" />
    <x:Property Name="in_strApiKey" Type="InArgument(x:String)" />
    <x:Property Name="in_intMaxTokens" Type="InArgument(x:Int32)" />
    <x:Property Name="in_strModelName" Type="InArgument(x:String)" />
    <x:Property Name="in_boolLogsToggle" Type="InArgument(x:Boolean)" />
    <x:Property Name="in_intTemperature" Type="InArgument(x:Double)" />
    <x:Property Name="out_strFullResponse" Type="OutArgument(x:String)" />
    <x:Property Name="out_strFirstChoiceResponse" Type="OutArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap2010:Annotation.AnnotationText>UPTF00000088eyI8SGVscExpbms+a19fQmFja2luZ0ZpZWxkIjpudWxsLCI8SW5pdGlhbFRvb2x0aXA+a19fQmFja2luZ0ZpZWxkIjpudWxsLCI8VmVyc2lvbj5rX19CYWNraW5nRmllbGQiOjF9</sap2010:Annotation.AnnotationText>
  <sap:VirtualizedContainerService.HintSize>2218.0173913043477,1419.1304347826085</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="64">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Net</x:String>
      <x:String>System.Text</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="47">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Text.Encoding.CodePages</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>UiPathTeam.SharePoint</AssemblyReference>
      <AssemblyReference>OfficeDevPnP.Core</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Collections.Specialized</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Sequence" sap:VirtualizedContainerService.HintSize="560.1391304347826,1354.0173913043477" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="strCombinedPrompt" />
      <Variable x:TypeArguments="x:String" Name="strGptOutput" />
      <Variable x:TypeArguments="njl:JObject" Name="jsonGptOutput" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <TryCatch DisplayName="General Try Catch" sap:VirtualizedContainerService.HintSize="517.5652173913044,1264.695652173913" sap2010:WorkflowViewState.IdRef="TryCatch_2">
      <TryCatch.Try>
        <Sequence sap:VirtualizedContainerService.HintSize="479.99999999999994,1036.8" sap2010:WorkflowViewState.IdRef="Sequence_12">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If Condition="[in_boolLogsToggle]" DisplayName="If in_boolLogsToggle" sap:VirtualizedContainerService.HintSize="437.4260869565217,25.043478260869563" sap2010:WorkflowViewState.IdRef="If_4">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="399.86086956521734,181.1478260869565" sap2010:WorkflowViewState.IdRef="Sequence_10">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="357.2869565217391,91.82608695652173" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Trace" Message="[&quot;OpenAi API - &quot; + in_strModelName + &quot; - &quot; + in_intMaxTokens.ToString + &quot; - &quot; + DateTime.Now.ToShortDateString +&quot; &quot; +DateTime.Now.ToShortTimeString]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:LogMessage>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence sap:VirtualizedContainerService.HintSize="399.86086956521734,80.97391304347826" sap2010:WorkflowViewState.IdRef="Sequence_11">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Sequence>
            </If.Else>
          </If>
          <Sequence DisplayName="Input Arguments Check" sap:VirtualizedContainerService.HintSize="437.4260869565217,80.1391304347826" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:Boolean" Name="boolValidationPassed" />
              <Variable x:TypeArguments="x:String" Name="strValidationError" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="477.495652173913,133.56521739130434" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
              <ui:MultipleAssign.AssignOperations>
                <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:Boolean">[boolValidationPassed]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:Boolean">[Not String.IsNullOrEmpty(in_strInputPrompt) AndAlso Not String.IsNullOrEmpty(in_strApiKey) AndAlso Not String.IsNullOrEmpty(in_strModelName) AndAlso in_intMaxTokens &gt; 0]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[strValidationError]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[If(boolValidationPassed, String.Empty, "The following input or output arguments are invalid: " + If(String.IsNullOrEmpty(in_strInputPrompt), "in_strInputPrompt ", String.Empty) + If(String.IsNullOrEmpty(in_strApiKey), "in_strApiKey ", String.Empty) + If(String.IsNullOrEmpty(in_strModelName), "in_ModelName ", String.Empty) + If(in_intMaxTokens &lt;= 0, "in_intMaxTokens ", String.Empty))]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                </scg:List>
              </ui:MultipleAssign.AssignOperations>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:MultipleAssign>
            <If Condition="[boolValidationPassed = False]" DisplayName="If boolValidationPassed = False Throw SE" sap:VirtualizedContainerService.HintSize="477.495652173913,454.9565217391304" sap2010:WorkflowViewState.IdRef="If_2">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="399.86086956521734,179.47826086956522" sap2010:WorkflowViewState.IdRef="Sequence_5">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Throw DisplayName="Throw SE Validation Error" Exception="[new SystemException(&quot;OpenAi API - Validation Error: &quot;+strValidationError+&quot; - &quot;+DateTime.Now.ToShortDateString+&quot; &quot;+DateTime.Now.ToShortTimeString)]" sap:VirtualizedContainerService.HintSize="357.2869565217391,90.15652173913043" sap2010:WorkflowViewState.IdRef="Throw_1" />
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap:VirtualizedContainerService.HintSize="399.86086956521734,80.97391304347826" sap2010:WorkflowViewState.IdRef="Sequence_6">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Sequence>
              </If.Else>
            </If>
          </Sequence>
          <TryCatch DisplayName="Function Try Catch" sap:VirtualizedContainerService.HintSize="437.4260869565217,393.18260869565216" sap2010:WorkflowViewState.IdRef="TryCatch_1">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <TryCatch.Try>
              <ui:InvokeCode ContinueOnError="{x:Null}" Code="Try&#xD;&#xA;&#x9;' Create JSON request body&#xD;&#xA;    Dim requestBodyJson As String = &quot;{ &quot;&quot;model&quot;&quot;: &quot;&quot;&quot;+modelName+&quot;&quot;&quot;, &quot;&quot;messages&quot;&quot;: [{&quot;&quot;role&quot;&quot;: &quot;&quot;user&quot;&quot;, &quot;&quot;content&quot;&quot;: &quot;&quot;&quot; + inputPrompt + &quot;&quot;&quot;}], &quot;&quot;temperature&quot;&quot;: &quot;+temperature.ToString()+&quot;, &quot;&quot;max_tokens&quot;&quot;: &quot; + maxTokens.ToString() + &quot;, &quot;&quot;n&quot;&quot;: 1, &quot;&quot;stop&quot;&quot;: null }&quot;&#xD;&#xA;&#xD;&#xA;    ' Create HTTP request&#xD;&#xA;    Dim requestUrl As String = &quot;https://api.openai.com/v1/chat/completions&quot;&#xD;&#xA;    Dim request As HttpWebRequest = CType(WebRequest.Create(requestUrl), HttpWebRequest)&#xD;&#xA;    request.Method = &quot;POST&quot;&#xD;&#xA;    request.Headers(&quot;Authorization&quot;) = &quot;Bearer &quot; &amp; apiKey&#xD;&#xA;    request.ContentType = &quot;application/json&quot;&#xD;&#xA;    request.ContentLength = requestBodyJson.Length&#xD;&#xA;   request.Timeout = 60000 ' Timeout value in milliseconds (10 seconds)&#xD;&#xA;    request.ReadWriteTimeout = 60000 ' 30 seconds&#xD;&#xA;    Using streamWriter As New StreamWriter(request.GetRequestStream())&#xD;&#xA;        streamWriter.Write(requestBodyJson)&#xD;&#xA;    End Using&#xD;&#xA;&#xD;&#xA;    ' Send HTTP request and get response&#xD;&#xA;    Dim response As WebResponse = request.GetResponse()&#xD;&#xA;    Dim httpWebResponse As HttpWebResponse = CType(response, HttpWebResponse)&#xD;&#xA;    Dim responseStream As Stream = httpWebResponse.GetResponseStream()&#xD;&#xA;    Dim responseReader As New StreamReader(responseStream)&#xD;&#xA;    Dim responseString As String = responseReader.ReadToEnd()&#xD;&#xA;&#xD;&#xA;    ' Parse JSON response&#xD;&#xA;    Dim jsonResponse As JObject = JObject.Parse(responseString)&#xD;&#xA;    Dim choicesArray As JArray = CType(jsonResponse(&quot;choices&quot;), JArray)&#xD;&#xA;    If choicesArray IsNot Nothing AndAlso choicesArray.Count &gt; 0 Then&#xD;&#xA;        Dim choiceObject As JObject = CType(choicesArray(0), JObject)&#xD;&#xA;        outputResponse = jsonResponse.ToString&#xD;&#xA;    Else&#xD;&#xA;        Throw New Exception(&quot;OpenAI API did not return any choices&quot;)&#xD;&#xA;    End If&#xD;&#xA;&#xD;&#xA;Catch ex As WebException&#xD;&#xA;    Dim errorResponse As HttpWebResponse = CType(ex.Response, HttpWebResponse)&#xD;&#xA;    If errorResponse IsNot Nothing Then&#xD;&#xA;        Dim errorStream As Stream = errorResponse.GetResponseStream()&#xD;&#xA;        Dim errorReader As New StreamReader(errorStream)&#xD;&#xA;        Dim errorText As String = errorReader.ReadToEnd()&#xD;&#xA;        Throw New Exception(&quot;OpenAI API returned an error: &quot; &amp; errorText)&#xD;&#xA;    Else&#xD;&#xA;        Throw New Exception(&quot;OpenAI API request failed with error: &quot; &amp; ex.Message)&#xD;&#xA;    End If&#xD;&#xA;Catch ex As Exception&#xD;&#xA;    Throw New Exception(&quot;OpenAI API request failed with error: &quot; &amp; ex.Message)&#xD;&#xA;End Try&#xD;&#xA;" DisplayName="Open AI API GPT 3.5" sap:VirtualizedContainerService.HintSize="333.9130434782609,165.2869565217391" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
                <ui:InvokeCode.Arguments>
                  <InArgument x:TypeArguments="x:String" x:Key="inputPrompt">
                    <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_strInputPrompt" />
                  </InArgument>
                  <OutArgument x:TypeArguments="x:String" x:Key="outputResponse">
                    <VisualBasicReference x:TypeArguments="x:String" ExpressionText="strGptOutput" />
                  </OutArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="modelName">
                    <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_strModelName" />
                  </InArgument>
                  <InArgument x:TypeArguments="x:Int32" x:Key="maxTokens">
                    <VisualBasicValue x:TypeArguments="x:Int32" ExpressionText="in_intMaxTokens" />
                  </InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="apiKey">
                    <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_strApiKey" />
                  </InArgument>
                  <InArgument x:TypeArguments="x:Double" x:Key="temperature">
                    <VisualBasicValue x:TypeArguments="x:Double" ExpressionText="in_intTemperature" />
                  </InArgument>
                </ui:InvokeCode.Arguments>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:InvokeCode>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="403.2,21.704347826086956" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ActivityAction x:TypeArguments="s:Exception">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                  </ActivityAction.Argument>
                  <Throw DisplayName="Throw SE Function Try Catch" Exception="[new System.Exception(&quot;OpenAi API - Error in Function Try Catch - &quot;+exception.Message +&quot;, At Source:&quot;+exception.Source+&quot; - &quot;+DateTime.Now.ToShortDateString+&quot; &quot;+DateTime.Now.ToShortTimeString)]" sap:VirtualizedContainerService.HintSize="333.9130434782609,90.15652173913043" sap2010:WorkflowViewState.IdRef="Throw_3">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </Throw>
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
          </TryCatch>
          <Assign sap:VirtualizedContainerService.HintSize="437.4260869565217,79.30434782608695" sap2010:WorkflowViewState.IdRef="Assign_1">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[out_strFullResponse]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[strGptOutput]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON Response" sap:VirtualizedContainerService.HintSize="437.4260869565217,25.043478260869563" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_3" JsonObject="[jsonGptOutput]" JsonString="[strGptOutput]">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:DeserializeJson>
          <Assign sap:VirtualizedContainerService.HintSize="437.4260869565217,79.30434782608695" sap2010:WorkflowViewState.IdRef="Assign_2">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[out_strFirstChoiceResponse]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String" xml:space="preserve">[jsonGptOutput("choices")(0)("message")("content").ToString.Trim.Replace(vbTab,"").Replace(vbCrLf,"").Replace("  ","")]</InArgument>
            </Assign.Value>
          </Assign>
          <If Condition="[in_boolLogsToggle]" DisplayName="If in_boolLogsToggle" sap:VirtualizedContainerService.HintSize="437.4260869565217,25.043478260869563" sap2010:WorkflowViewState.IdRef="If_3">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="399.86086956521734,181.1478260869565" sap2010:WorkflowViewState.IdRef="Sequence_8">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="357.2869565217391,91.82608695652173" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Trace" Message="[&quot;OpenAi API - &quot;+ jsonGptOutput(&quot;choices&quot;)(0)(&quot;message&quot;)(&quot;content&quot;).ToString+&quot; - &quot;+DateTime.Now.ToShortDateString+&quot; &quot;+DateTime.Now.ToShortTimeString]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:LogMessage>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence sap:VirtualizedContainerService.HintSize="399.86086956521734,80.97391304347826" sap2010:WorkflowViewState.IdRef="Sequence_9">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Sequence>
            </If.Else>
          </If>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="483.3391304347826,21.704347826086956" sap2010:WorkflowViewState.IdRef="Catch`1_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Throw DisplayName="Throw SE - General Try Catch" Exception="[new System.Exception(&quot;OpenAi API - Error in General Try Catch - &quot;+exception.Message +&quot;, At Source:&quot;+exception.Source+&quot; - &quot;+DateTime.Now.ToShortDateString+&quot; &quot;+DateTime.Now.ToShortTimeString)]" sap:VirtualizedContainerService.HintSize="333.9130434782609,90.15652173913043" sap2010:WorkflowViewState.IdRef="Throw_2" />
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
  </Sequence>
</Activity>